- name: user
  hosts: user
  become: true
  tasks:
    - name: disable latest nodejs and enable nodejs 18 
      ansible.builtin.shell: dnf module disable nodejs -y;dnf module enable nodejs:18 -y

    - name: install node js
      ansible.builtin.package:
        name: nodejs
        state: present

    - name: create roboshop user
      ansible.builtin.user: 
        name: roboshop      

    - name: create app directory 
      ansible.builtin.file:
        path: /app 
        state: directory 

    - name: download user code
      ansible.builtin.get_url: 
        url: https://roboshop-builds.s3.amazonaws.com/user.zip
        dest: /tmp

    - name: unzip user code
      ansible.builtin.unarchive:
        src: /tmp/user.zip
        dest: /app 
        remote_src: yes

    - name: install dependencies
      ansible.builtin.command: npm install
      args:
        chdir: /app

    - name: copy user service
      ansible.builtin.copy:
        src: user.service
        dest: /etc/systemd/system/user.service

    - name: daemon reload and start user 
      ansible.builtin.systemd:
        daemon-reload: true

    - name: copy mongo repo 
      ansible.builtin.copy:
        src: mongo.repo  
        dest: /etc/yum.repos.d/mongo.repo

    - name: install mongodb client
      ansible.builtin.package:
        name: mongodb-org-shell
        state: present

    - name: get user count
      ansible.builtin.command: mongo --host mongodb.aws-devops.online --quiet --eval 'db = db.getSiblingDB("user"); db.products.count()'
      register: user_count 

    - name: load user data
      ansible.builtin.command: mongo --host mongodb.aws-devops.online < /app/schema/user.js
      when: user_count.stdout == "0"


    - name: start and enable user
      ansible.builtin.service:
       name: user
       state: restarted
       enabled: yes







