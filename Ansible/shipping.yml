- name: shipping
  hosts: shipping
  become: true 
  vars:
    mysql_password: RoboShop@1 
  tasks:
    - name: install maven   
      package:
        name: maven
        state: latest 
    - name: create roboshop user
      user:
        name: roboshop   

    - name: create app directory
      file:
        path: /app
        state: directory

    - name: download shipping code
      ansible.builtin.get_url: 
        url: https://roboshop-builds.s3.amazonaws.com/shipping.zip
        dest: /tmp

    - name: unzip shipping code
      ansible.builtin.unarchive:
        src: /tmp/shipping.zip
        dest: /app 
        remote_src: yes

    - name: installing dependencies
      ansible.builtin.command: mvn clean package
      args:
        chdir: /app

    - name: rename jar file 
      command: mv target/shipping-1.0.jar shipping.jar   
      args:
        chdir: /app

    - name: copy shipping service file
      copy: 
        src: shipping.service
        dest: /etc/systemd/system/shipping.service

    - name: daemon reload and start catalogue 
      ansible.builtin.systemd:
        daemon-reload: true

    - name: install mysql client
      dnf:
        name: mysql
        state: present 

    - name: check if data is already present in database
      ansible.builtin.command:  mysql -h mysql.aws-devops.online -uroot -p{{mysql_password}} -sN -e "SELECT COUNT(*) FROM INFORMATION_SCHEMA.SCHEMATA WHERE SCHEMA_NAME = 'cities'"
      register: schema      

    - name: load cities data
      ansible.builtin.shell: "mysql -h mysql.aws-devops.online -uroot -p{{mysql_password}}  < /app/schema/shipping.sql"
      when: schema.stdout != "1"

    - name: start and enable shipping
      ansible.builtin.service:
        name: shipping
        state: restarted
        enabled: yes    